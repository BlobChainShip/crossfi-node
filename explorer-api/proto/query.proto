syntax = "proto3";
package mineplex.explorer_api;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "tendermint/types/block.proto";
import "tendermint/abci/types.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/tx/v1beta1/service.proto";

option go_package = "explorer-api";

service Query {
  rpc Validator(ValidatorRequest) returns (ValidatorResponse) {
    option (google.api.http).get = "/validator/{address}";
  }

  rpc Validators(ValidatorsRequest) returns (ValidatorsResponse) {
    option (google.api.http).get = "/validators";
  }

  rpc Tx(TxRequest) returns (TxResponse) {
    option (google.api.http).get = "/tx/{hash}";
  }

  rpc Txs(TxsRequest) returns (TxsResponse) {
    option (google.api.http).get = "/txs";
  }

  rpc Address(AddressRequest) returns (AddressResponse) {
    option (google.api.http).get = "/address/{address}";
  }

  rpc Coins(CoinsRequest) returns (CoinsResponse) {
    option (google.api.http).get = "/coins";
  }

  rpc Status(StatusRequest) returns (StatusResponse) {
    option (google.api.http).get = "/status";
  }

  rpc Block(BlockRequest) returns (cosmos.tx.v1beta1.GetBlockWithTxsResponse) {
    option (google.api.http).get = "/block/{height}";
  }

  rpc Blocks(BlocksRequest) returns (BlocksResponse) {
    option (google.api.http).get = "/blocks";
  }
}

message ValidatorsRequest {
}

message ValidatorsResponse {
  repeated cosmos.staking.v1beta1.Validator validators = 1 [(gogoproto.nullable) = false];
}

message ValidatorRequest {
  string address = 1;
}

message ValidatorResponse {
  cosmos.staking.v1beta1.Validator validator = 1 [(gogoproto.nullable) = false];
}

message TxsRequest {
  string address = 1;
}

message TxsResponse {
  repeated TxResponse txs = 1 [(gogoproto.nullable) = false];
}

message TxRequest {
  string hash = 1;
}

message TxResponse {
  string tx = 1;
  int64 height = 2;
  tendermint.abci.ResponseDeliverTx result = 3 [(gogoproto.nullable)   = false];
}

message StatusRequest {
}

message StatusResponse {
  string latest_block_hash = 1;
  int64 latest_block_height = 2;
  string latest_block_time = 3;
}

message CoinsRequest {
}

message CoinsResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message AddressRequest {
  string address = 1;
}

message AddressResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  uint64 number = 2;
  uint64 sequence = 3;
  repeated cosmos.staking.v1beta1.DelegationResponse delegations = 4 [(gogoproto.nullable) = false];
  repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_delegations = 5 [(gogoproto.nullable) = false];
  repeated cosmos.staking.v1beta1.RedelegationResponse redelegations = 6 [(gogoproto.nullable) = false];
  RewardsResponse rewards = 7 [(gogoproto.nullable) = false];
}

message DelegationDelegatorReward {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = true;

  string validator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  repeated cosmos.base.v1beta1.DecCoin reward = 2
  [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.nullable) = false];
}

message RewardsResponse {
  repeated DelegationDelegatorReward rewards = 1 [(gogoproto.nullable) = false];
  // total defines the sum of all the rewards.
  repeated cosmos.base.v1beta1.DecCoin total = 2
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
}

message BlocksRequest {
  int64 from_height = 1;
  int64 to_height = 2;
}

message BlocksResponse {
  repeated cosmos.tx.v1beta1.GetBlockWithTxsResponse blocks = 1;
}

message BlockRequest {
  int64 height = 1;
}



